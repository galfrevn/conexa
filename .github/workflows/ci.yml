name: Conexa Techincal Test Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

on:
  push:
    branches:
      - main

jobs:
  # Pull metadata
  metadata:
    name: 'Pull environment metadata'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Pull request details
        run: |
          echo "⛓️ Repository: ${{ github.event.repository.name }}"
          echo "⛓️ Branch: ${{ github.event.repository.default_branch }}"

  testing:
    name: 'Unit testing checks'
    runs-on: ubuntu-latest
    needs: [metadata]
    steps:
      - name: 📦 Checkout project repository
        uses: actions/checkout@v3

      - name: 📦 Setup Node & Install dependencies
        uses: ./.github/actions/setup

      - name: 📦 Create environment file
        run: |
          touch .env
          echo API_URL=${{ secrets.TEST_API_URL }} >> .env
          echo APP_URL=${{ secrets.TEST_APP_URL }} >> .env
          echo API_KEY=${{ secrets.TEST_API_KEY }} >> .env

      - name: 🧪 Run unit tests
        run: pnpm test
        

  backend:
    name: '(Production) Deploy backend package'
    runs-on: ubuntu-latest
    needs: [metadata, testing]
    steps:
      - name: 📦 Checkout project repository
        uses: actions/checkout@v3

      - name: 📦 Setup Node & Install dependencies
        uses: ./.github/actions/setup

      - name: 📦 Install Railwail CLI
        run: pnpm install -w @railway/cli@latest

      - name: 🚀 Deploy backend package
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  frontend:
    name: '(Production) Deploy frontend package'
    runs-on: ubuntu-latest
    needs: [metadata, testing]
    steps:
      - name: 📦 Checkout project repository
        uses: actions/checkout@v3

      - name: 📦 Setup Node & Install dependencies
        uses: ./.github/actions/setup

      - name: 📦 Install Vercel CLI
        run: pnpm install -w vercel@latest

      - name: 🔒 Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: 🚀 Deploy Project to Vercel
        run: vercel --yes --prod --token=${{ secrets.VERCEL_TOKEN }}
